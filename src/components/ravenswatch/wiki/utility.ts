import type { TooltipOptions } from 'primevue/tooltip'
export const makeTooltip = (text: string): TooltipOptions => {
  return {
    escape: false,
    value: text,
    autoHide: false,
    dt: {
      background: '{surface.800}',
      borderRadius: '4px',
    },
    pt: {
      text: {
        style: {
          'font-family': "'Atkinson Hyperlegible Next', sans-serif",
          'font-optical-sizing': 'auto',
          'font-weight': 300,
          'font-size': '0.8em',
          'font-style': 'normal',
        },
      },
    },
  }
}
export const ComboPointTooltip = makeTooltip(
  `Unique mechanic to scarlet. Combo points can be generated by attacking or talents, and can be seen underneach the healthbar`,
)
export const IntangibleTooltip = makeTooltip(
  `Can only be damaged by specific attacks, distinguishable via yellow-red flashing indicators`,
)
export const InvincibleTooltip = makeTooltip(`Can not be damaged`)
export const StealtTooltip = makeTooltip(
  `Is invisible to enemies, thus not drawing their aggro. Can do contextual actions while in stealth`,
)
export const LifestealTooltip = makeTooltip(`Receive x% of the damage dealt as healing`)
export const ArmorTooltip = makeTooltip(
  `Each point of armor increases effective HP by 1% (non-diminishing)`,
)
export const VitalityTooltip = makeTooltip(`Each point of vitality increases HP by 1%`)
export const AttackTooltip = makeTooltip(`Each point of attack increases damage by 1%`)
export const CritChanceTooltip = makeTooltip(
  `Each point of critical hit chance increases the chance by 1%`,
)
export const CritDamageTooltip = makeTooltip(
  `Each point of critical hit damage increases the damage dealt by a critical hit by 1% of the base damage`,
)
export const ChargesTooltip = makeTooltip(
  `Charges are additional activations of an ability, with their cooldowns happening sequentially`,
)
export const DayTooltip = makeTooltip(`The day part of the day-night cycle`)
export const NightTooltip = makeTooltip(`The night part of the day-night cycle`)
export const AbilityTooltip = (ability: string) =>
  makeTooltip(`<span class="germania-one">${ability}</span>`)
